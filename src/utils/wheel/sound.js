// src/utils/sound.js

class WheelAudio {
  constructor() {
    this.audio = null;
    this.isLoaded = false;
    this.isMobile = /Mobi|Android/i.test(navigator.userAgent);

    // üîπ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∑–≤—É–∫–∞ (OGG ‚Äî –º–µ–Ω—å—à–µ –ª–∞–≥–∞–µ—Ç)
    this.loadSound('/sounds/click.ogg');
  }

  async loadSound(src) {
    try {
      this.audio = new Audio(src);
      this.audio.preload = 'auto';
      this.audio.load();

      // –ö–æ–≥–¥–∞ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è ‚Äî –æ—Ç–º–µ—á–∞–µ–º
      this.audio.addEventListener('canplaythrough', () => {
        this.isLoaded = true;
        console.log('‚úÖ –ó–≤—É–∫ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω –∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω');
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–≤—É–∫–∞:', error);
    }
  }

  triggerFeedback() {
    // üîπ –í–∏–±—Ä–∞—Ü–∏—è (–Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞—Ö)
    if (navigator.vibrate && this.isMobile) {
      navigator.vibrate(30); // –∫–æ—Ä–æ—Ç–∫–∞—è –≤–∏–±—Ä–∞—Ü–∏—è ~30–º—Å
    }

    // üîπ –ó–≤—É–∫ (–Ω–∞ –ü–ö –∏ –º–æ–±–∏–ª—å–Ω—ã—Ö)
    if (this.audio && this.isLoaded) {
      try {
        const clickClone = this.audio.cloneNode(); // —á—Ç–æ–±—ã –Ω–µ –Ω–∞–∫–ª–∞–¥—ã–≤–∞–ª—Å—è
        clickClone.volume = 0.4;
        clickClone.play().catch(() => {});
      } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫:', e);
      }
    }
  }
}

export const wheelAudio = new WheelAudio();
