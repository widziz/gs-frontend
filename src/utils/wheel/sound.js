// src/utils/sound.js

class WheelAudio {
  constructor() {
    this.isMobile = /Mobi|Android/i.test(navigator.userAgent);
    this.audioCtx = null;
    this.buffer = null;
    this.isReady = false;

    this.init();
  }

  async init() {
    try {
      // —Å–æ–∑–¥–∞—ë–º –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç (–ª–µ–Ω–∏–≤–æ)
      this.audioCtx = new (window.AudioContext || window.webkitAudioContext)();

      // –∑–∞–≥—Ä—É–∂–∞–µ–º –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –∑–≤—É–∫
      const response = await fetch("/sounds/click.ogg");
      const arrayBuffer = await response.arrayBuffer();
      this.buffer = await this.audioCtx.decodeAudioData(arrayBuffer);
      this.isReady = true;

      console.log("‚úÖ Web Audio –∑–≤—É–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –ø–∞–º—è—Ç—å");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–≤—É–∫–∞:", err);
    }
  }

  triggerFeedback() {
    // üîπ –í–∏–±—Ä–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
    if (navigator.vibrate && this.isMobile) {
      navigator.vibrate(25);
    }

    // üîπ –ó–≤—É–∫ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    if (this.isReady && this.audioCtx.state === "running") {
      const source = this.audioCtx.createBufferSource();
      source.buffer = this.buffer;

      const gainNode = this.audioCtx.createGain();
      gainNode.gain.value = 0.3; // –≥—Ä–æ–º–∫–æ—Å—Ç—å

      source.connect(gainNode).connect(this.audioCtx.destination);
      source.start(0);
    } else if (this.audioCtx?.state === "suspended") {
      // –±—Ä–∞—É–∑–µ—Ä—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å—Ç–∞–≤—è—Ç –≤ "suspended" ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –∫–ª–∏–∫—É
      this.audioCtx.resume();
    }
  }
}

export const wheelAudio = new WheelAudio();
